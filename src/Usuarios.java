
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.sql.Blob;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Usuarios.java
 *
 * Created on 12-abr-2011, 14:09:43
 */

/**
 *
 * @author Administrador
 */
public class Usuarios extends javax.swing.JDialog {

    VentanaPrincipal padre = new VentanaPrincipal();
    JFileChooser explorador = new JFileChooser();
    File fotografia = null;

    public Usuarios(VentanaPrincipal padre, boolean modal) {
        super(padre, modal);
        this.padre = padre;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuEmergente = new javax.swing.JPopupMenu();
        jPCargarFoto = new javax.swing.JMenuItem();
        lTextoExplicativo = new javax.swing.JLabel();
        tNombres = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tEmail = new javax.swing.JTextField();
        jLCedula = new javax.swing.JLabel();
        tCedula = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPImagen = new javax.swing.JPanel();
        jLImagen = new javax.swing.JLabel();
        bGuardar = new javax.swing.JButton();
        pContrasena = new javax.swing.JPasswordField();
        pRectificaContrasena = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        tUsuarios = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jCPerfil = new javax.swing.JComboBox();

        jPCargarFoto.setText("Cargar Foto");
        jPCargarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPCargarFotoActionPerformed(evt);
            }
        });
        jMenuEmergente.add(jPCargarFoto);

        jMenuEmergente.getAccessibleContext().setAccessibleParent(this);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CREAR USUARIO");

        lTextoExplicativo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lTextoExplicativo.setText("<html>Aqui puedes crear tus Usuarios. <i><b>Usuario</b></i> es todo aquel que tiene permisos (Otorgados por el Administrador) para Manejar y/o Manipular la Aplicacion.</html>");

        tNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tNombresActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLabel2.setText("* Nombres :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLabel3.setText("* E_mail :");

        tEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tEmailFocusLost(evt);
            }
        });

        jLCedula.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLCedula.setText("* Cedula :");

        tCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tCedulaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tCedulaKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLabel5.setText("* Contraseña :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLabel6.setText("* Rectifique Contraseña :");

        jPImagen.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPImagen.setComponentPopupMenu(jMenuEmergente);
        jPImagen.setLayout(new java.awt.BorderLayout());
        jPImagen.add(jLImagen, java.awt.BorderLayout.CENTER);

        bGuardar.setText("Guardar");
        bGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLabel7.setText("* Usuario :");

        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLabel8.setText("* Perfil :");

        jCPerfil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Vendedor", "Administrador" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lTextoExplicativo, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tNombres, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                                .addComponent(tEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(pContrasena, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                                        .addComponent(jLCedula, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tCedula, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCPerfil, 0, 123, Short.MAX_VALUE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18))
                                        .addComponent(tUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))))
                            .addComponent(pRectificaContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bGuardar)
                            .addComponent(jPImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(lTextoExplicativo, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPImagen, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bGuardar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addGap(4, 4, 4)
                                .addComponent(tEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLCedula)
                                        .addGap(4, 4, 4)
                                        .addComponent(tCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(tUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8))
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pRectificaContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jLabel7)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tNombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tNombresActionPerformed

    //metodo para validar que los campos de password sean identicos
    public boolean validaPassword(){
        boolean validacion = false;
        if(pContrasena.getText().equals(pRectificaContrasena.getText())){
            validacion = true;
        }else{
            validacion = false;
        }
        return validacion;
    }
    //valida q los campos no esten vacios
    public boolean EmptyField(){
        boolean vacio = false;
        if(tNombres.getText().isEmpty() || tEmail.getText().isEmpty() || tCedula.getText().isEmpty() || pContrasena.getText().isEmpty()){
            vacio = false;
        }else{
            vacio = true;
        }
        return vacio;
    }
    //metodo para limpiar campos
    public void clernField(){
        this.tCedula.setText("");
        this.tEmail.setText("");
        this.tNombres.setText("");
        this.tUsuarios.setText("");
        this.pContrasena.setText("");
        this.pRectificaContrasena.setText("");
        jLImagen.setIcon(null);
    }

    //metodo para guardar usuario
    public void saveUser(){
        if(validaPassword() && EmptyField() && !tNombres.getText().isEmpty() && !tEmail.getText().isEmpty() && !tCedula.getText().isEmpty() && !pContrasena.getText().isEmpty()){
            try{
                if(fotografia != null){
                    String sql = "INSERT INTO usuario VALUES('"+tCedula.getText().toLowerCase()+"', '"+this.tNombres.getText()+"','"+tEmail.getText().toLowerCase()+"', '"+jCPerfil.getSelectedItem().toString()+"', '"+tUsuarios.getText().toLowerCase()+"', '"+pContrasena.getText()+"', null)";
                    padre.conectorMySql.sentencia.execute(sql);

                    //almaceno la foto
                    FileInputStream streamEntrada = new FileInputStream(fotografia);
                    PreparedStatement pstmt = padre.conectorMySql.conexion.prepareStatement("UPDATE ferreteria.usuario set foto = ? WHERE cedula='"+tCedula.getText()+"'");
                    pstmt.setBinaryStream(1, streamEntrada, (int)fotografia.length());
                    pstmt.executeUpdate();
                    pstmt.close();
                    streamEntrada.close();
                    JOptionPane.showMessageDialog(null, "<html>El Usuario con numero de Cedula <b>"+this.tCedula.getText()+"</b> y Nombres <b>"+this.tNombres.getText().toUpperCase()+"</b> ha sido Guardado en Nuestra Base De Datos..!</b></html>");
                    //luego de ingresar los datos limpio los campos
                    clernField();
                }else{
                    JOptionPane.showMessageDialog(null, "<html>No ha suministrado una <b>Foto</b> o Imagen que lo(a) Relacione con su cuenta</html>\nPor favor rectifique..!");
                }
            }catch(Exception er){
                //JOptionPane.showMessageDialog(this, "error : "+er.toString());
                if((er.toString().indexOf("Duplicate")>0) && (er.toString().indexOf("user")>0)){
                    //valida duplicidad en el nombre del producto
                    JOptionPane.showMessageDialog(null, "<html>Ya hay un usuario con este mismo nombre Por Rectifique, </html>\n<html>para evitar problemas de duplicidad..!</html>\n<html>Si presenta algun inconveniente, comuniquese con el <B>Desarrollador De La Aplicacion.></B></html>");
                }
                //valida duplicidad con la clave primaria
                if((er.toString().indexOf("Duplicate")>0) && (er.toString().indexOf("PRIMARY")>0)){
                    //valida duplicidad en el nombre del producto
                    JOptionPane.showMessageDialog(null, "<html>Ya hay un USUARIO con el numero de cedula <b>"+tCedula.getText()+"</b>, Por Rectifique, </html>\n<html>para evitar problemas de duplicidad..!</html>\n<html>Si presenta algun inconveniente, comuniquese con el <B>Desarrollador De La Aplicacion.></B></html>");
                }
                System.out.println("error creando usuarios : "+er.toString());
            }
        }else{
            JOptionPane.showMessageDialog(this, "<html>Los Campos de Contraseñas no Coinsiden y/o hay Campos vacios. Por favor Rectifique.</html>\n<html>Si el inconveniente Perciste Comuniquese con el <b>Desarrollador De La Aplicacion.</b></html>");
        }
    }

    private void bGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarActionPerformed
        if(bGuardar.getText().equalsIgnoreCase("Guardar")){
            saveUser();
        }else{
            try{
                //borro
                padre.conectorMySql.sentencia.execute("DELETE FROM usuario WHERE cedula = '"+tCedula.getText()+"'");
                //ahora guardo los nuevos datos
                saveUser();
                bGuardar.setText("Guardar");
            }catch(Exception er){
                JOptionPane.showMessageDialog(null, "error actualizando usuario : "+er.toString());
            }
        }
    }//GEN-LAST:event_bGuardarActionPerformed

    private void jPCargarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPCargarFotoActionPerformed
        try{
            explorador.setMultiSelectionEnabled(false);
            explorador.setDialogTitle("Seleccione una Imagen..!");
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Imagenes (*.png, *.jpg, *.gif)", "png","jpg", "gif");
            explorador.setFileFilter(filter);
            if(explorador.showOpenDialog(Usuarios.this)== JFileChooser.APPROVE_OPTION){
                fotografia = explorador.getSelectedFile();
                ImageIcon imagen = new ImageIcon(explorador.getSelectedFile().getCanonicalPath());
                java.awt.Image escala = imagen.getImage();
                escala = escala.getScaledInstance(jLImagen.getWidth(),jLImagen.getHeight(), java.awt.Image.SCALE_AREA_AVERAGING);
                imagen.setImage(escala);
                jLImagen.setIcon(imagen);
                jLImagen.updateUI();
            }
        }catch(Exception error){
            System.out.println("Error accediendo al archivo"+error.toString());
        }
    }//GEN-LAST:event_jPCargarFotoActionPerformed

    private void tCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tCedulaKeyTyped
        Miscelania.numbersOnly(evt);
    }//GEN-LAST:event_tCedulaKeyTyped

    private void tEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tEmailFocusLost
        Miscelania.valida_E_mails(this.tEmail.getText(), this.tEmail);
    }//GEN-LAST:event_tEmailFocusLost

    //METODO PARA CONSULTAR USUARIOS
    public void getUser(){
        try{
            String sql = "SELECT * FROM usuario WHERE cedula = '"+tCedula.getText()+"'";
            ResultSet rs = padre.conectorMySql.sentencia.executeQuery(sql);
            if(rs.next()){
                tCedula.setEnabled(false);
                //cargo todos los datos
                tNombres.setText(rs.getString("nombres").toUpperCase());
                tEmail.setText(rs.getString("e_mail").toUpperCase());
                tUsuarios.setText(rs.getString("user").toUpperCase());
                pContrasena.setText(rs.getString("password"));
                pRectificaContrasena.setText(rs.getString("password"));
                jCPerfil.setSelectedItem(rs.getString("perfil"));
                bGuardar.setText("Actualizar");
                //cargo la foto
                Blob foto = rs.getBlob("foto");
                if(foto!=null){
                    byte[] byteHuella = foto.getBytes(1,(int)foto.length());
                    fotografia = new File("temp/" + rs.getString("cedula") + ".jpg");
                    FileOutputStream canalSalida = new FileOutputStream(fotografia);
                    canalSalida.write(byteHuella);
                    canalSalida.close();
                    //MOSTRAR LA IMAGEN EN LA VISTA PREVIA
                    ImageIcon imagenFoto = new ImageIcon("temp/"+rs.getString("cedula") + ".jpg");
                    Image imageAuxiliar = imagenFoto.getImage();
                    imageAuxiliar = imageAuxiliar.getScaledInstance(jLImagen.getWidth(), jLImagen.getHeight(), Image.SCALE_AREA_AVERAGING);
                    imagenFoto.setImage(imageAuxiliar);
                    jLImagen.setIcon(imagenFoto);
                    jLImagen.updateUI();
                }
            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(null, "error consultando por usuario : "+er.toString());
        }
    }

    private void tCedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tCedulaKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            getUser();
        }
    }//GEN-LAST:event_tCedulaKeyPressed

    /**
    * @param args the command line arguments
    */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                Usuarios dialog = new Usuarios(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bGuardar;
    private javax.swing.JComboBox jCPerfil;
    private javax.swing.JLabel jLCedula;
    private javax.swing.JLabel jLImagen;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPopupMenu jMenuEmergente;
    private javax.swing.JMenuItem jPCargarFoto;
    private javax.swing.JPanel jPImagen;
    private javax.swing.JLabel lTextoExplicativo;
    private javax.swing.JPasswordField pContrasena;
    private javax.swing.JPasswordField pRectificaContrasena;
    private javax.swing.JTextField tCedula;
    private javax.swing.JTextField tEmail;
    private javax.swing.JTextField tNombres;
    private javax.swing.JTextField tUsuarios;
    // End of variables declaration//GEN-END:variables

}
