
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Ventas.java
 *
 * Created on 21-abr-2011, 4:29:02
 */

/**
 *
 * @author Administrador
 */
public class Ventas extends javax.swing.JDialog {

    //ConectorMySQL conexion;
    VentanaPrincipal padre;
    BusquedaVentas busc;
    JTextField campoTotal;
    Factura factur = new Factura(padre, true);
    JTable tabla;

    public Ventas(VentanaPrincipal padre, boolean modal, JTable tabla, JTextField campoTotal){
        super(padre, modal);
        this.campoTotal = campoTotal;
        this.padre = padre;
        this.tabla = tabla;
        //busc = new BusquedaVentas(padre.conectorMySql, this.jTCodigo, this.jTNombreProducto); = new BusquedaVentas(padre.conectorMySql, this.jTCodigo, this.jTNombreProducto);
//        try{
//            conexion = new ConectorMySQL("127.0.0.1","ferreteria", "root", "");
//        }catch(Exception er){
//            JOptionPane.showMessageDialog(null, "no se pudo conectar la ventana de ventas : "+er.toString());
//        }
        initComponents();
        //busc = new BusquedaVentas(padre.conectorMySql, this.jTNombreProducto, this.jTCodigo);// = new BusquedaVentas(conexion, this.jTCodigo, this.jTNombreProducto);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPContenedor = new javax.swing.JPanel();
        jLTextoDescriptivo = new javax.swing.JLabel();
        jLCodigo = new javax.swing.JLabel();
        jTCodigo = new javax.swing.JTextField();
        jLNombreProducto = new javax.swing.JLabel();
        jTNombreProducto = new javax.swing.JTextField();
        jLBodega = new javax.swing.JLabel();
        jTBodega = new javax.swing.JTextField();
        jTStock = new javax.swing.JTextField();
        jLStock = new javax.swing.JLabel();
        jLPrecio = new javax.swing.JLabel();
        jTPrecio = new javax.swing.JTextField();
        jLNombreUsuario = new javax.swing.JLabel();
        jBAceptar = new javax.swing.JButton();
        jPImagen = new javax.swing.JPanel();
        jLImagen = new javax.swing.JLabel();
        jBCancelar = new javax.swing.JButton();
        jLBodega1 = new javax.swing.JLabel();
        jTCantidadVenta = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PRODUCTOS");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        busc = new BusquedaVentas(padre.conectorMySql, this.jTNombreProducto, this.jTCodigo, this.jTBodega, this.jTStock, this.jTPrecio, jLImagen, jTCantidadVenta);
        jPContenedor.add(busc);
        jPContenedor.setBackground(new java.awt.Color(255, 255, 255));

        jLTextoDescriptivo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLTextoDescriptivo.setText("<html>En esta Ventana se pueden ver Datos referentes al producto en mension, entre los que se nota la <b>Cantiodad</b> del producto en Bodega, el Stock, para saber si se tiene el total de la capacidad, entre otros.</html>");

        jLCodigo.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLCodigo.setText("Codigo :");

        jTCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTCodigoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTCodigoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTCodigoKeyTyped(evt);
            }
        });

        jLNombreProducto.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLNombreProducto.setText("Nombre del Producto :");

        jTNombreProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTNombreProductoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTNombreProductoKeyReleased(evt);
            }
        });

        jLBodega.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLBodega.setText("Bodega :");

        jLStock.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLStock.setText("Stock :");

        jLPrecio.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLPrecio.setText("Precio :");

        jLNombreUsuario.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLNombreUsuario.setForeground(new java.awt.Color(102, 51, 255));
        jLNombreUsuario.setText("Usuario :");

        jBAceptar.setText("Aceptar");
        jBAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAceptarActionPerformed(evt);
            }
        });

        jPImagen.setBackground(new java.awt.Color(255, 255, 255));
        jPImagen.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPImagen.setLayout(new java.awt.BorderLayout());

        jLImagen.setBackground(new java.awt.Color(255, 255, 255));
        jPImagen.add(jLImagen, java.awt.BorderLayout.CENTER);

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jLBodega1.setFont(new java.awt.Font("Tahoma", 3, 11));
        jLBodega1.setText("Cantidad a Vender :");

        javax.swing.GroupLayout jPContenedorLayout = new javax.swing.GroupLayout(jPContenedor);
        jPContenedor.setLayout(jPContenedorLayout);
        jPContenedorLayout.setHorizontalGroup(
            jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLTextoDescriptivo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPContenedorLayout.createSequentialGroup()
                        .addGroup(jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLCodigo)
                            .addComponent(jTCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLNombreProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTNombreProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPContenedorLayout.createSequentialGroup()
                        .addGroup(jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPContenedorLayout.createSequentialGroup()
                                    .addGroup(jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jTBodega, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLBodega, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTStock)
                                        .addComponent(jLStock, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLPrecio))
                                    .addGap(2, 2, 2))
                                .addGroup(jPContenedorLayout.createSequentialGroup()
                                    .addComponent(jBAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTCantidadVenta, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLBodega1, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(jPImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59))
        );
        jPContenedorLayout.setVerticalGroup(
            jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLTextoDescriptivo, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPContenedorLayout.createSequentialGroup()
                        .addComponent(jLCodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPContenedorLayout.createSequentialGroup()
                        .addComponent(jLNombreProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPContenedorLayout.createSequentialGroup()
                        .addGroup(jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPContenedorLayout.createSequentialGroup()
                                .addComponent(jLBodega)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTBodega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPContenedorLayout.createSequentialGroup()
                                .addGroup(jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLStock)
                                    .addComponent(jLPrecio))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(3, 3, 3)
                        .addComponent(jLBodega1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTCantidadVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLNombreUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBCancelar)
                            .addComponent(jBAceptar)))
                    .addComponent(jPImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        //new Factura(padre, true);
        //Factura factur = new Factura(padre, true);
        //jPContenedor.add(factur);
        //factur.setLocation(100,200);
        //factur.setVisible(true);

        getContentPane().add(jPContenedor, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCodigoKeyPressed

}//GEN-LAST:event_jTCodigoKeyPressed

    private void jTNombreProductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNombreProductoKeyPressed

}//GEN-LAST:event_jTNombreProductoKeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        
    }//GEN-LAST:event_formKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
//        try{
//            conexion.conexion.close();
//        }catch(Exception er){
//            JOptionPane.showMessageDialog(null, "error cerrando la conexion : "+er.toString());
//        }
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        jLNombreUsuario.setText(padre.usuario);
    }//GEN-LAST:event_formWindowOpened

    private void jBAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAceptarActionPerformed
        try{
        //valido q la cantidad no sea nula
        if(jTCantidadVenta.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "La cantidad no puede ser nula por favor rectifique..!", "La cantidad es Nula..!", JOptionPane.ERROR_MESSAGE);
        }else{
            boolean productoRepetido = false;

            int stock = 0;
            int cantidad = 0;
            String precio = null;
            //consulto sobre el producto en mension
            String sql = "SELECT * FROM productos WHERE nombre = '"+jTNombreProducto.getText().toLowerCase()+"' ";
            ResultSet rs = padre.conectorMySql.sentencia.executeQuery(sql);
            if(rs.next()){
                stock = Integer.parseInt(rs.getString("stock"));
                cantidad = Integer.parseInt(rs.getString("cantidad"));
                precio = rs.getString("precio_venta_unidad");
            }
            System.out.println("la cantidad es : "+cantidad);
            //valido q halla mas de una unidad en bodega, antes de hacer la venta
            if(cantidad > 0){
                //recorro la tabla para evitar ingresar un articulo repetido
                for(int i=0;i<tabla.getRowCount();i++){
                    if(tabla.getValueAt(i, 1).toString().equalsIgnoreCase(jTNombreProducto.getText())){//VALIDO EL NOMBRE DEL PRODUCTO
                        productoRepetido = true;
                        //EN ESTE PUNTO ENCONTRE EL MISMO PRODUCTO Q PRETENDO ADICIONAR
                        //ENTONCES LA ADICIONO '1' A LA CANTIDADA ACTUAL
                        int adicion = Integer.parseInt(tabla.getValueAt(i, 0).toString()) + 1;
                        System.out.println("el numero a adicionar es : "+adicion);
                        tabla.setValueAt(Integer.parseInt(""+adicion), i, 0);
                        //AHORA CAMBIO EL VALOR TOTAL
                        int valorUnidad = Integer.parseInt(tabla.getValueAt(i, 2).toString());
                        int monto = valorUnidad * adicion;
                        tabla.setValueAt(""+monto, i, 3);
                        //CAMBIO EL TOTAL
                        int totalTotal = valorUnidad + Integer.parseInt(campoTotal.getText());
                        campoTotal.setText(""+totalTotal);
                        //ME SALGO DEL CICLO
                        i = tabla.getRowCount() + 17;
                    }
                }
                //SI EL PRODUCTO ESTA REPETIDO NO AGREGO UNA FILA MAS
                if(!productoRepetido){
                    //creo una nueva tupla a la tabla
                    ((DefaultTableModel)tabla.getModel()).setRowCount(tabla.getRowCount() + 1);
                    tabla.setValueAt(this.jTNombreProducto.getText().toUpperCase(), padre.filaTablaFactura, 1);
                    //coloco un 1 como cantidad en la tabla
                    int precioXcantidad = Integer.parseInt(jTCantidadVenta.getText()) * Integer.parseInt(precio);
                    tabla.setValueAt(jTCantidadVenta.getText(), padre.filaTablaFactura, 0);
                    //coloco el precio x unidad
                    tabla.setValueAt(precio, padre.filaTablaFactura, 2);
                    //coloco en valor total hasta este momento
                    tabla.setValueAt(precioXcantidad, padre.filaTablaFactura, 3);
                    padre.filaTablaFactura++;
                    //coloco el total en su campo
                    int totales = Integer.parseInt(campoTotal.getText()) + precioXcantidad;
                    campoTotal.setText(""+totales);
                }

                tabla.updateUI();
                setVisible(false);
            }else{
                JOptionPane.showMessageDialog(null, "<html>No hay Unidades de este producto en bodega, motivo por el cual la venta no se puede realizar.</html>\n<html>Si presenta algun inconveniente y/o inconsistencia, comuniquese con el <b>Desarrollador De La Aplicacion.</b></html>", "no hay venta...!", JOptionPane.ERROR_MESSAGE);
            }

            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(null, "error en el boton aceptar : "+er.toString());
        }
    }//GEN-LAST:event_jBAceptarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jTCodigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCodigoKeyReleased
                //inicializo tanto las filas de la tabla como el cuentafilas q me indica por donde voy
        int aux = 0;
        ((DefaultTableModel)busc.jTConsultas.getModel()).setRowCount(0);
        try{
            //consulto todos los productos que en su nombre contengan los caracteres ingresados
            //en el campo de texto
            String sql = "SELECT * FROM productos WHERE id LIKE '"+jTCodigo.getText()+"%'  ";
            ResultSet rs = padre.conectorMySql.sentencia.executeQuery(sql);
            while(rs.next()){
                busc.setLocation(jTCodigo.getLocation().x - 2, jTCodigo.getLocation().y  + 17);
                busc.setVisible(true);
                //le doy el foco al campo de texto, para poder seguir escriviendo sobre el
                jTCodigo.grabFocus();
                //adiciono una fila a la tabla
                ((DefaultTableModel)busc.jTConsultas.getModel()).setRowCount(busc.jTConsultas.getRowCount() + 1);
                //ingreso la informacion a la tabla
                busc.jTConsultas.setValueAt(rs.getString("id").toUpperCase(), aux, 0);
                busc.jTConsultas.setValueAt(rs.getString("nombre").toUpperCase(), aux, 1);
                aux++;
            }//else{
//                //si no encuentra nada borra todas las fila
//                aux = 0;
//                ((DefaultTableModel)busc.jTConsultas.getModel()).setRowCount(0);
//            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(this, "error en el internalFrame 2 : "+er.toString());
        }
       if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
            busc.dispose();
        }
       if(evt.getKeyCode() == KeyEvent.VK_F2){
            busc.jTConsultas.grabFocus();
       }
    }//GEN-LAST:event_jTCodigoKeyReleased

    private void jTNombreProductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNombreProductoKeyReleased
        //inicializo tanto las filas de la tabla como el cuentafilas q me indica por donde voy
        int aux = 0;
        ((DefaultTableModel)busc.jTConsultas.getModel()).setRowCount(0);

        try{
            //consulto todos los productos que en su nombre contengan los caracteres ingresados
            //en el campo de texto
            String sql = "SELECT * FROM productos WHERE nombre LIKE '%"+jTNombreProducto.getText().toLowerCase()+"%'  ";
            ResultSet rs = padre.conectorMySql.sentencia.executeQuery(sql);
            while(rs.next()){
                busc.setLocation(this.jTNombreProducto.getLocation().x - 2, this.jTNombreProducto.getLocation().y  + 17);
                busc.setVisible(true);
//                le doy el foco al campo de texto, para poder seguir escriviendo sobre el
                jTNombreProducto.grabFocus();
                //adiciono una fila a la tabla
                ((DefaultTableModel)busc.jTConsultas.getModel()).setRowCount(busc.jTConsultas.getRowCount() + 1);
                busc.jTConsultas.setValueAt(rs.getString("id").toUpperCase(), aux, 0);
                busc.jTConsultas.setValueAt(rs.getString("nombre").toUpperCase(), aux, 1);
                aux++;
            }//else{
//                //si no encuentra nada borra todas las fila
//                aux = 0;
//                ((DefaultTableModel)busc.jTConsultas.getModel()).setRowCount(0);
//            }
        }catch(Exception er){
            JOptionPane.showMessageDialog(this, "error en el internalFrame : "+er.toString());
        }
       if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
            busc.dispose();
        }
       if(evt.getKeyCode() == KeyEvent.VK_F2){
            busc.jTConsultas.grabFocus();
       }
    }//GEN-LAST:event_jTNombreProductoKeyReleased

    private void jTCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCodigoKeyTyped
        Miscelania.numbersOnly(evt);
    }//GEN-LAST:event_jTCodigoKeyTyped

    /**
    * @param args the command line arguments
    */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                Ventas dialog = new Ventas(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAceptar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JLabel jLBodega;
    private javax.swing.JLabel jLBodega1;
    private javax.swing.JLabel jLCodigo;
    private javax.swing.JLabel jLImagen;
    private javax.swing.JLabel jLNombreProducto;
    private javax.swing.JLabel jLNombreUsuario;
    private javax.swing.JLabel jLPrecio;
    private javax.swing.JLabel jLStock;
    private javax.swing.JLabel jLTextoDescriptivo;
    private javax.swing.JPanel jPContenedor;
    private javax.swing.JPanel jPImagen;
    private javax.swing.JTextField jTBodega;
    private javax.swing.JTextField jTCantidadVenta;
    public static javax.swing.JTextField jTCodigo;
    public javax.swing.JTextField jTNombreProducto;
    private javax.swing.JTextField jTPrecio;
    private javax.swing.JTextField jTStock;
    // End of variables declaration//GEN-END:variables

}
